<Singleton> Class
a class that is only instantiated once, and is shared around where needed.
has a private instructor that is either instantiated the FIRST time it is USED, or at program START


When testing, Make a version of the Program that only contains the Start Stage and the End Stage, the Interstage just copies from the Start and End, so it doesnt need to be there for simple testing


new info:
Checklist for Saturday, sunday, monday
Try to get done as early as possible.

1. Fix problems with each Stage, picking up on other issues where possible, do not bother with The Queue until these are finished.
2. To clarify further, each stage (including default) requires:
2a. Pull function usability (Start Stage needs more work, but double check the other ones too just to be sure i havent missed anything like state progression and widget info storage)
2b. Push function usability (End Stage Specifically needs the most work, but same as pull, needs looking over for the others as well)
2c. Their own go() functions, in theory these should be the same regardless, as they should check for item in cell, if no then pull new one, if yes check for completion, if no, do nothing, make a new job, if yes then push to next queue and attempt a pull again.
3. Then once the stages are done, work on the StatStore, basically regarded as the end of the program. Im thinking it should use an arraylist to store items and then compile all info at the very end, that way numbers dont get all fucky.
3a. i am open to suggestions though and will probably ask someone for help if possible.
^ Done

4. Once that's sorted, fix the Queue. This may fuck up a lot of things, but the idea is that i havent actually made a queue, so ill use the java.util.Queue and make a container around it to do the things i need it to.
^ in progress

5. Complete A3. this can mostly be copied from moosa's old one, but tweak it so it actually works.
6. DO the FIRST RUN, notably only with a Start and end stage.
7a. If all goes swimmingly, Make the program more complicated, to match the spec.
7b. if, however things do not go to plan, figure out what went wrong and try to fix it FIRST, before making it more complex.

Last Note, If ANYTHIGN COMES UP THAT MAKES ME STUMPED IN ANY WAY
pls write it in the report info file, so i can write a half decent report.